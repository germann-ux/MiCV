
function checkVisibility() {
    const sections = document.querySelectorAll('section');
    const windowHeight = window.innerHeight;
    sections.forEach(section => {
        const sectionTop = section.getBoundingClientRect().top;
        if (sectionTop < windowHeight * 0.75) {
            section.classList.add('visible');
        }
    });

    const toTopButton = document.getElementById('to-top');
    toTopButton.classList.toggle('visible', window.scrollY > 300);
}

document.addEventListener('DOMContentLoaded', checkVisibility);
window.addEventListener('scroll', checkVisibility);

document.getElementById('to-top').addEventListener('click', function (e) {
    e.preventDefault();
    window.scrollTo({ top: 0, behavior: 'smooth' });
});

const messages = [
    "¬°German! ¬°Necesitamos esto para ayer!",
    "German dice que est√° trabajando a toda velocidad...",
    "German ha prometido terminar pronto... otra vez.",
    "German pregunta si puedes esperar un poco m√°s...",
    "‚ÄòSolo un commit m√°s‚Äô, dijo Germ√°n hace media hora.",
    "Est√° en una batalla √©pica contra un bug de 1 l√≠nea.",
    "Mientras esperas, puedes hacer un caf√©... o dos.",
    "Dicen que si presionas este bot√≥n muchas veces, Germ√°n se acelera."
];

const easterEggs = {
    5: "¬ø¬°5 clics ya!?",
    13: "¬ø13 clics? Parece que est√°s buscando bugs a prop√≥sito...",
    20: "10+10 = el n√∫mero de clics que llevas....",
    27: "Quiz√°s eres muy persistente... quiz√°s.",
    34: "‚ÄòDon't forget...‚Äô que Germ√°n es humano tambi√©n.",
    42: "La respuesta al sentido de la vida es... seguir presionando este bot√≥n.",
    66: "Tienes mucho tiempo libre ehh.",
    69: "69 clics, Nice.",
    72: "Cliquear este bot√≥n tanto te llena de determinaci√≥n.",
    99: "Ya casi... Quiz√°s si le das 1 clic m√°s, te llevas una sorpresa."
};

let hurryClicks = 99;

document.getElementById('hurry-btn').addEventListener('click', function () {
    hurryClicks++;

    if (easterEggs[hurryClicks]) {
        alert(easterEggs[hurryClicks]);
    } else {
        // Easter egg aleatorio raro (2% de probabilidad)
        if (Math.random() < 0.02) {
            alert("üéâ ¬°Has desbloqueado el 'Modo Secreto', ¬øqu√© te da esto? Nada en absoluto. Pero ¬øa poco no est√° cool?");
        } else {
            const randomMessage = messages[Math.floor(Math.random() * messages.length)];
            alert(randomMessage);
        }
    }

    if (hurryClicks === 10) {
        this.textContent = "¬°Ya d√©jalo en paz!";
    }

    if (hurryClicks === 100) {
        this.textContent = "Germ√°n ascendi√≥. ‚ú®";
        alert("üí• ¬°Felicidades! Has desbloqueado el final secreto: Modo Confeti Infinito ü•≥");

        // Confeti
        const duration = 3 * 1000;
        const animationEnd = Date.now() + duration;
        const defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 1000 };

        const interval = setInterval(function () {
            const timeLeft = animationEnd - Date.now();

            if (timeLeft <= 0) {
                clearInterval(interval);
            }

            confetti({
                ...defaults,
                particleCount: 10,
                origin: { x: Math.random(), y: Math.random() - 0.2 }
            });
        }, 200);
    }
});




const lightbox = document.querySelector('.lightbox');
const lightboxImg = lightbox.querySelector('img');
const galleryItems = document.querySelectorAll('.gallery-item');
const lightboxClose = document.querySelector('.lightbox-close');
const lightboxPrev = document.querySelector('.lightbox-prev');
const lightboxNext = document.querySelector('.lightbox-next');
let currentImgIndex = 0;

galleryItems.forEach((item, index) => {
    item.addEventListener('click', () => {
        const img = item.querySelector('img');
        currentImgIndex = index;
        openLightbox(img.src, img.alt);
    });
});

function openLightbox(src, alt) {
    lightboxImg.src = src;
    lightboxImg.alt = alt;
    lightbox.classList.add('active');
    document.body.style.overflow = 'hidden';
}

function closeLightbox() {
    lightbox.classList.remove('active');
    document.body.style.overflow = 'auto';
}

lightboxClose.addEventListener('click', closeLightbox);
lightbox.addEventListener('click', (e) => {
    if (e.target === lightbox) closeLightbox();
});

function navigateLightbox(offset) {
    currentImgIndex = (currentImgIndex + offset + galleryItems.length) % galleryItems.length;
    const img = galleryItems[currentImgIndex].querySelector('img');
    openLightbox(img.src, img.alt);
}

lightboxPrev.addEventListener('click', () => navigateLightbox(-1));
lightboxNext.addEventListener('click', () => navigateLightbox(1));

document.addEventListener('keydown', (e) => {
    if (!lightbox.classList.contains('active')) return;
    if (e.key === 'Escape') closeLightbox();
    if (e.key === 'ArrowLeft') navigateLightbox(-1);
    if (e.key === 'ArrowRight') navigateLightbox(1);
});
